#!/bin/bash

# Autostart
riverctl spawn "waybar"
riverctl spawn "~/.local/bin/kile"
riverctl spawn 'mpd'
riverctl spawn 'mpDris2'
riverctl spawn '/usr/lib/xdg-desktop-portal-wlr'
riverctl spawn '/usr/lib/kdeconnectd'
riverctl spawn 'lxpolkit'
~/.local/bin/eww daemon

# Sourcing layouts
source ~/.config/river/layout

# Wallpaper
riverctl spawn "swaybg -o '*' '-c' '#111111'"

# Use the "logo" key as the primary modifier
mod="Mod4"

# Mod+Shift+Return to start an instance of Alacritty
riverctl map normal $mod Return spawn alacritty

# Launch wofi -run
riverctl map normal $mod R spawn "dmenu_path | wofi --dmenu | sh"

# Launch wofi -drun
riverctl map normal $mod D spawn "wofi --show drun"

# Screen lock
riverctl map normal $mod f1 spawn swaylock

# Cursor behaviour
riverctl focus-follows-cursor normal

# Mod+Q to close the focused view
riverctl map normal $mod Q close

# Mod+P to exit river
riverctl map normal $mod+Shift P exit

# Mod+T for the layout switcher
riverctl map normal $mod S spawn ~/.config/river/switcher

# Mod+K and Mod+J to focus the next/previous view in the layout stack
riverctl map normal $mod K focus-view next
riverctl map normal $mod J focus-view previous

# Mod+Shift+K and Mod+Shift+J to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal $mod+Shift K swap next
riverctl map normal $mod+Shift J swap previous

# Screenshot with Swappy
riverctl map normal Mod1 print spawn 'grimshot --notify copy area'
riverctl map normal None print spawn 'grimshot --notify copy output'

# Mod+Period and Mod+Comma to focus the next/previous output
riverctl map normal $mod Period focus-output next
riverctl map normal $mod Comma focus-output previous

# Mod+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal $mod+Shift L spawn "riverctl send-to-output next"
riverctl map normal $mod+Shift H spawn "riverctl send-to-output previous"
riverctl set-cursor-warp on-output-change

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Mod+Return to bump the focused view to the top of the layout stack, making
# it the new master
riverctl map normal $mod+Shift Return zoom

# Keybindings for kile
for mode in "normal" "testing"
do
  case "$mode" in
    normal)
      layout="kile"
      ;;
  esac

  # Mod+H and Mod+L to decrease/increase the width of the master column by 5%
  riverctl map "${mode}" $mod H mod-layout-value "${layout}" fixed main_factor -0.05
  riverctl map "${mode}" $mod L mod-layout-value "${layout}" fixed main_factor 0.05

  # Mod+Shift+{K, L} to increment/decrement the number of master views in the layout
  riverctl map "${mode}" $mod+Control L mod-layout-value "${layout}" int main_amount 1
  riverctl map "${mode}" $mod+Control H mod-layout-value "${layout}" int main_amount -1

  # Custom layouts
  riverctl map "${mode}" $mod Y set-layout-value "${layout}" string focused "$DECK"
  riverctl map "${mode}" $mod T set-layout-value "${layout}" string focused "$STACK"
  riverctl map "${mode}" $mod+Shift D set-layout-value "${layout}" string focused "$DWINDLE"
  riverctl map "${mode}" $mod E set-layout-value "${layout}" string focused "$CENTERED"
done

# Declaring scratchpads and their keybinds
for key in 1 2 3 4 5 6 7 8 9
do
  case "$key" in
    1|2|3|4|5|6|7|8|9)
      i=$key
      ;;
  esac
  tagmask=$((1 << ($i - 1)))

  # Mod+{M, N, B} to focus tag [20-22]
  riverctl map normal $mod $key set-focused-tags $tagmask

  # Mod+Shift+{M, N, B} to tag focused view with tag [20-22]
  riverctl map normal $mod+Shift $key set-view-tags $tagmask

  # Mod+Ctrl+{M, N, B} to toggle focus of tag [20-22]
  riverctl map normal $mod+Control $key toggle-focused-tags $tagmask

  # Mod+Shift+Ctrl+{M, N, B} to toggle tag [20-22] of focused view
  riverctl map normal $mod+Mod1 $key toggle-view-tags $tagmask
done

# Mod+0 to focus all tags
# Mod+Shift+0 to tag focused view with all tags
all_tags_mask=255
riverctl map normal $mod '0' set-focused-tags $all_tags_mask
riverctl map normal $mod+Shift '0' set-view-tags $all_tags_mask

# Mod+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal $mod+Mod1+Control H snap left
riverctl map normal $mod+Mod1+Control J snap down
riverctl map normal $mod+Mod1+Control K snap up
riverctl map normal $mod+Mod1+Control L snap right

# Mod+Alt+Shif+{H,J,K,L} to resize views
riverctl map normal $mod+Mod1+Shift H resize horizontal -100
riverctl map normal $mod+Mod1+Shift J resize vertical 100
riverctl map normal $mod+Mod1+Shift K resize vertical -100
riverctl map normal $mod+Mod1+Shift L resize horizontal 100

# Toggle and reload waybar
riverctl map normal $mod B spawn 'killall -SIGUSR1 waybar'
riverctl map normal $mod+Shift B spawn 'killall -SIGUSR2 waybar'

# Mod + Left Mouse Button to move views
riverctl map-pointer normal $mod BTN_LEFT move-view

# Mod + Right Mouse Button to resize views
riverctl map-pointer normal $mod BTN_RIGHT resize-view

# Mod+Space to toggle float
riverctl map normal $mod Space toggle-float

# Mod+F to toggle fullscreen
riverctl map normal $mod F toggle-fullscreen

# Mod+F11 to enter passthrough mode
riverctl map normal $mod F11 enter-mode passthrough

# Mod+F11 to return to normal mode
riverctl map passthrough $mod F11 enter-mode normal
riverctl map testing $mod F10 enter-mode normal

# Mod+F10 to enter testing mode
riverctl map normal $mod F10 enter-mode testing

# Various media key mapping for both normal and locked mode
for mode in normal locked
do
	riverctl map "${mode}" None XF86Eject             spawn eject -T
	riverctl map "${mode}" None XF86AudioRaiseVolume  spawn ~/.scripts/system/volume up
	riverctl map "${mode}" None XF86AudioLowerVolume  spawn ~/.scripts/system/volume down
	riverctl map "${mode}" None XF86AudioMute         spawn pamixer --toggle-mute
	riverctl map "${mode}" None XF86AudioMedia        spawn playerctl play-pause
	riverctl map "${mode}" None XF86AudioPlay         spawn playerctl play-pause
	riverctl map "${mode}" None XF86AudioPrev         spawn playerctl previous
	riverctl map "${mode}" None XF86AudioNext         spawn playerctl next
	riverctl map "${mode}" None XF86MonBrightnessUp   spawn light -A 5
	riverctl map "${mode}" None XF86MonBrightnessDown spawn light -U 5
done

# Set repeat rate
riverctl set-repeat 50 300

# Set app-ids of views which should float
riverctl float-filter-add "float"
riverctl float-filter-add "popup"
riverctl float-filter-add "swappy"
riverctl float-filter-add "imv"

# Set app-ids of views which should use client side decorations
riverctl csd-filter-add "swappy"

# Set opacity and fade effect
riverctl opacity 1.0 1.0 0.0 0.1 30

# Border color focused
riverctl border-color-focused '#61afef'

# Border color focused
riverctl border-color-unfocused '#333333'

# Border width
riverctl border-width 4

# Default layout
riverctl default-layout kile

# Kile configuration
for output in "eDP-1"
do
  riverctl set-layout-value kile int outer_padding 6
  riverctl set-layout-value kile int view_padding 6
  case $output in
    eDP-1)
      # Default layout
      riverctl set-layout-value kile string all "$DECK"
      ;;
  esac
  riverctl focus-output next
done
riverctl attach-mode bottom
riverctl focus-output next

# Stuff that should start last because waybar is slow sometimes

sleep 10

riverctl spawn 'nm-applet --indicator'
riverctl spawn 'wpa-cute -tq'
riverctl spawn 'blueman-applet'
